:::: {.application}

## Application 12b : créer un fichier d'installation de A à Z

1. Créer un service `ubuntu` sur le SSP Cloud
2. Ouvrir un terminal
3. Cloner le dépôt
4. Se placer dans le dossier du projet avec `cd`
5. Se placer au niveau du checkpoint 11b avec `git checkout appli11b`
6. Via l'explorateur de fichiers, créer le fichier `install.sh` à la racine du projet avec le contenu suivant:

<details>
<summary>Script à créer sous le nom `install.sh` </summary>
```{.bash filename="install.sh" no-prefix=true}
apt-get -y update && apt-get -y install wget

wget https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh && \
    bash Miniconda3-latest-Linux-x86_64.sh -b -p /miniconda && \
    rm -f Miniconda3-latest-Linux-x86_64.sh

PATH="/miniconda/bin:${PATH}"

# Create environment
conda create -n titanic pandas PyYAML scikit-learn -c conda-forge
conda activate titanic

PATH="/miniconda/envs/titanic/bin:${PATH}"

python main.py
```
</details>

6. Changer les permissions sur le script pour le rendre exécutable

```{.bash filename="terminal"}
chmod +x install.sh
```

7. Exécuter le script depuis la ligne de commande avec des droits de super-utilisateur (nécessaires pour installer des *packages* via `apt`)

```{.bash filename="terminal"}
sudo ./install.sh
```

8. Vérifier que le script `main.py` fonctionne correctement dans l'environnement virtuel créé

```{.bash filename="terminal"}
conda activate titanic
python3 main.py
```

::::


{{< checkpoint appli12b >}}
