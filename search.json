[
  {
    "objectID": "index.html#rappels-séance-1",
    "href": "index.html#rappels-séance-1",
    "title": "Mise en production des projets de data science",
    "section": "Rappels séance #1",
    "text": "Rappels séance #1\n Retrouver les slides précédentes sur ensae-reproductibilite.github.io/slides/"
  },
  {
    "objectID": "index.html#rappel-séance-4",
    "href": "index.html#rappel-séance-4",
    "title": "Mise en production des projets de data science",
    "section": "Rappel séance #4",
    "text": "Rappel séance #4\n\nOn a trouvé comment construire une reproduction de l’ordinateur qui faisait tourner notre code\n\nAvec Docker \n\n\n\n\nOn ne va pas demander à chaque utilisateur de notre application de faire tourner ce code\n\n\n\n\nIl nous reste à automatiser la livraison de celui-ci"
  },
  {
    "objectID": "index.html#quest-ce-que-le-format-yaml",
    "href": "index.html#quest-ce-que-le-format-yaml",
    "title": "Mise en production des projets de data science",
    "section": "Qu’est-ce que le format YAML ?",
    "text": "Qu’est-ce que le format YAML ?\n\nYAML Ain’t Markup Language\n\nLangage de sérialisation de données\nStructure expressive mais lisible\n\n\n\n---\nsource: ambient-it.net\ndomain:\n - devops\ntutorial:\n  - yaml:\n      name: YAML Ain't Markup Language\n      born: 2001\n  - json:\n      name: JavaScript Object Notation\n      born: 2001\n  - xml:\n      name: Extensible Markup Language\n      born: 1996\n---"
  },
  {
    "objectID": "index.html#pourquoi-sintéresser-au-yaml",
    "href": "index.html#pourquoi-sintéresser-au-yaml",
    "title": "Mise en production des projets de data science",
    "section": "Pourquoi s’intéresser au YAML ?",
    "text": "Pourquoi s’intéresser au YAML ?\n\nOutil standard pour les fichiers de configuration\n\nThe rise of the YAML engineer\n\nSimplicité et puissance du paradigme déclaratif\n\nOn décrit l’état final souhaité\nL’implémentation est laissée au moteur sous-jacent\n\n\n\nkind: Pod\nmetadata:\n  name: my-api-pod\nspec:\n  containers:\n  - name: api\n    image: my_dh_account/my_fast_api:0.0.1\n    env:\n    - name: MODEL\n      value: deepseek-ai/DeepSeek-R1"
  },
  {
    "objectID": "index.html#yaml-vs.-json",
    "href": "index.html#yaml-vs.-json",
    "title": "Mise en production des projets de data science",
    "section": "YAML vs. JSON",
    "text": "YAML vs. JSON\n\nYAML est un superset de JSON\n\nTout fichier JSON valide est un fichier YAML valide\n\nStructure basée sur l’indentation\n\nFavorise la lisibilité\nPlus prône aux erreurs\n\n\n\n\n\n\n\n\n\nuser:\n  name: Alice\n  age: 30\n\n\n{\n  \"user\": {\n    \"name\": \"Alice\",\n    \"age\": 30\n  }\n}\n\n\n\n\nConvertisseurs : yaml-to-json, json-to-yaml"
  },
  {
    "objectID": "index.html#caractéristiques-dun-fichier-yaml",
    "href": "index.html#caractéristiques-dun-fichier-yaml",
    "title": "Mise en production des projets de data science",
    "section": "Caractéristiques d’un fichier YAML",
    "text": "Caractéristiques d’un fichier YAML\n\nExtension : .yaml ou .yml\nStructure hiérarchique basée sur des paires clé-valeur\nDifférents types à disposition (numériques, strings, booléens, listes)\n\n\nkind: Pod\nmetadata:\n  name: my-api-pod\nspec:\n  containers:\n  - name: api\n    image: my_dh_account/my_fast_api:0.0.1\n    env:\n    - name: MODEL\n      value: deepseek-ai/DeepSeek-R1\n    - name: DEBUG\n      value: true\n    ports:\n    - containerPort: 8000"
  },
  {
    "objectID": "index.html#validation-et-erreurs-fréquentes",
    "href": "index.html#validation-et-erreurs-fréquentes",
    "title": "Mise en production des projets de data science",
    "section": "Validation et erreurs fréquentes",
    "text": "Validation et erreurs fréquentes\n\nPrincipale erreur : mauvaise indentation\n\nUtiliser 2 espaces (pas de tabulation!)\n\nOutils de validation :\n\nSupport natif dans la plupart des IDE\nLinters : YAMLlint"
  },
  {
    "objectID": "index.html#yaml-et-lapproche-gitops",
    "href": "index.html#yaml-et-lapproche-gitops",
    "title": "Mise en production des projets de data science",
    "section": "YAML et l’approche GitOps",
    "text": "YAML et l’approche GitOps\n\nLe YAML est le langage privilégié de l’approche GitOps\n\nLes manifestes sont déclarés en YAML (paradigme infrastructure as code)\nLes manifestes sont stockés sur un dépôt Git (approche GitOps)\n\nCette approche a de nombreux avantages :\n\nReproductibilité\nTraçabilité\nAutomatisation"
  },
  {
    "objectID": "index.html#un-sujet-large",
    "href": "index.html#un-sujet-large",
    "title": "Mise en production des projets de data science",
    "section": "Un sujet large",
    "text": "Un sujet large\n\nLes questions essentielles à se poser :\n\nQuel est le format adapté pour valoriser le projet ?\nQuelle infrastructure de production ?\nComment automatiser le processus de déploiement ?\nComment suivre l’application en production ?\n\nDe nombreuses choix possibles\n\nPrésentation des concepts et outils standards"
  },
  {
    "objectID": "index.html#formats-de-valorisation",
    "href": "index.html#formats-de-valorisation",
    "title": "Mise en production des projets de data science",
    "section": "Formats de valorisation",
    "text": "Formats de valorisation\n\nCritères à prendre en compte :\n\nQuels sont les utilisateurs potentiels ?\nQuels sont leurs besoins ?\n\nExemple : mise à disposition d’un LLM\n\n\n\n\n\nSource : ubuntu.com"
  },
  {
    "objectID": "index.html#cas-dusage",
    "href": "index.html#cas-dusage",
    "title": "Mise en production des projets de data science",
    "section": "Cas d’usage",
    "text": "Cas d’usage\n\nServir un modèle de ML via une API"
  },
  {
    "objectID": "index.html#les-apis",
    "href": "index.html#les-apis",
    "title": "Mise en production des projets de data science",
    "section": "Les APIs",
    "text": "Les APIs\n\nUne API (application programming interface ou « interface de programmation d’application ») est une interface logicielle qui permet de « connecter » un logiciel ou un service à un autre logiciel ou service afin d’échanger des données et des fonctionnalités.\nCNIL\n\n\nDéfinition peu informative\n\nPython, scikit-learn, Docker, etc. sont des APIs\nEn pratique, on signifie généralement une API REST"
  },
  {
    "objectID": "index.html#les-apis-rest",
    "href": "index.html#les-apis-rest",
    "title": "Mise en production des projets de data science",
    "section": "Les APIs REST",
    "text": "Les APIs REST\n\nAPI RESTful : API conforme au style d’architecture REST\n\nCommunication via le protocole HTTP\n\nEn pratique :\n\nOn requête un endpoint (ex : l’API de la BAN)\nAvec des requêtes HTTP (GET, POST, etc.) (ex : rues contenant “comédie”)"
  },
  {
    "objectID": "index.html#architecture-cible",
    "href": "index.html#architecture-cible",
    "title": "Mise en production des projets de data science",
    "section": "Architecture cible",
    "text": "Architecture cible\n\nConstruire une API pour servir le modèle\n\nInterface entre l’utilisateur et le modèle entraîné"
  },
  {
    "objectID": "index.html#environnement-de-production",
    "href": "index.html#environnement-de-production",
    "title": "Mise en production des projets de data science",
    "section": "Environnement de production",
    "text": "Environnement de production\n\nDépend essentiellement de l’infrastructure à disposition\nPropriétés recherchées :\n\nAdapter les ressources (scaler) selon les besoins\nDéploiements reproductibles et automatisés\nMonitoring de l’état de santé des applications\n\nSolution : utiliser un orchestrateur de conteneurs\n\nBase du SSP Cloud : Kubernetes"
  },
  {
    "objectID": "index.html#fonctionnement-de-kubernetes",
    "href": "index.html#fonctionnement-de-kubernetes",
    "title": "Mise en production des projets de data science",
    "section": "Fonctionnement de Kubernetes",
    "text": "Fonctionnement de Kubernetes\n\n\n\nSource : DBA Consulting Blog"
  },
  {
    "objectID": "index.html#lapproche-cicd",
    "href": "index.html#lapproche-cicd",
    "title": "Mise en production des projets de data science",
    "section": "L’approche CI/CD",
    "text": "L’approche CI/CD\n\nIntégration continue (CI) : chaque commit déclenche un processus “test, build and release”\n\nGitHub  : GitHub Actions\nGitLab  : GitLab CI/CD\n\nDéploiement continu (CD) : les nouvelles releases sont automatiquement déployées\n\nSur le SSP Cloud : ArgoCD"
  },
  {
    "objectID": "index.html#ci-implémentation-avec-github-actions",
    "href": "index.html#ci-implémentation-avec-github-actions",
    "title": "Mise en production des projets de data science",
    "section": "CI : implémentation avec GitHub Actions",
    "text": "CI : implémentation avec GitHub Actions\n\nPrincipe : commit -&gt; exécution d’une série d’étapes\n\nScript exécuté sur une VM : runner\nMise à disposition d’un output : artifact\n\nMultiples outputs possibles\n\nImage Docker\nSlides\nSite internet"
  },
  {
    "objectID": "index.html#ci-anatomie-dun-fichier-de-ci",
    "href": "index.html#ci-anatomie-dun-fichier-de-ci",
    "title": "Mise en production des projets de data science",
    "section": "CI : anatomie d’un fichier de CI",
    "text": "CI : anatomie d’un fichier de CI\n\nSpécification : fichier .yaml qui paramétrise le runner\n\n⚠️ Situé dans le dossier .github/workflows/\n\n\n\n\n\n.github/workflows/ci.yaml\n\nname: Build Docker image\n\non:\n  push:\n    branches:\n      - main\n    tags:\n\njobs:\n  docker:\n    runs-on: ubuntu-latest\n    steps:\n      - name: Set up QEMU\n        uses: docker/setup-qemu-action@v3\n      - name: Set up Docker Buildx\n        uses: docker/setup-buildx-action@v3\n      - name: Docker meta\n        id: meta\n        uses: docker/metadata-action@v5\n        with:\n          images: ensae-reproductibilite/api-titanic\n      - name: Login to Docker Hub\n        uses: docker/login-action@v3\n        with:\n          username: ${{ secrets.DOCKERHUB_USERNAME }}\n          password: ${{ secrets.DOCKERHUB_TOKEN }}\n      - name: Build and push\n        uses: docker/build-push-action@v5\n        with:\n          push: true\n          tags: ${{ steps.meta.outputs.tags }}\n          labels: ${{ steps.meta.outputs.labels }}"
  },
  {
    "objectID": "index.html#cicd-implémentation-sur-kubernetes",
    "href": "index.html#cicd-implémentation-sur-kubernetes",
    "title": "Mise en production des projets de data science",
    "section": "CI/CD : implémentation sur Kubernetes",
    "text": "CI/CD : implémentation sur Kubernetes"
  },
  {
    "objectID": "index.html#pipeline-dataops-complet",
    "href": "index.html#pipeline-dataops-complet",
    "title": "Mise en production des projets de data science",
    "section": "Pipeline DataOps complet",
    "text": "Pipeline DataOps complet\n\nIntégration des étapes dans un pipeline (DAG)\n\n\n\n\n\nSource : ubuntu.com\n\n\n\nEn pratique : utilisation d’un orchestrateur\n\nSur le SSP Cloud : Argo Workflows"
  },
  {
    "objectID": "index.html#conclusion",
    "href": "index.html#conclusion",
    "title": "Mise en production des projets de data science",
    "section": "Conclusion",
    "text": "Conclusion\n\nOn a construit un pipeline reproductible et automatisé\n\n\n\n\n\nSource : ibm.com\n\n\n\nComment tenir compte des spécificités du ML ?\n\nApproche MLOps: la semaine prochaine !"
  },
  {
    "objectID": "index.html#mise-en-production",
    "href": "index.html#mise-en-production",
    "title": "Mise en production des projets de data science",
    "section": "Mise en production",
    "text": "Mise en production\n\nConsignes sur le site du cours\n\nPartie 4️⃣ : automatisation de la livraison d’une application avec l’intégration continue\nPartie 5️⃣ : déploiement d’une application et industrialisation"
  },
  {
    "objectID": "index.html#et-la-suite",
    "href": "index.html#et-la-suite",
    "title": "Mise en production des projets de data science",
    "section": "Et la suite ?",
    "text": "Et la suite ?\n\nDernière séance sur les enjeux spécifiques au cycle de vie des projets ML (MLOps) 🚀"
  }
]